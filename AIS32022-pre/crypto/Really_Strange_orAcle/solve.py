#!/usr/bin/python3
# -*- coding: UTF-8 -*-
from Crypto.Util.number import *
from gmpy2 import isqrt
from pwn import *

context.arch = 'amd64'

p = remote('chals1.ais3.org', 6004)
cipher = int(p.recvline()[:-1])

c_2 = 2720379687644941839640174647709513057596667120189602935524678768803030001529564800331248084119416608897283100072415842517620848579612510945300370661371168057090416404458159253500084262567155192278999907713692456568761082039990636312973400075056048999273377984589081336429415671648736526461526985099160529047923042160174123185999906064606231440759906896844435507315436967204082749897037278075082454238463923451062071765947870056391550602053331212769825966839667652732905149432791026178804159385573335523903629513475841948496211581358708095365241087288371977686680041778829956005313244036231680812836482495952913654149

c_4 = 15077744250194834341369528564510587321254873447743116231069968774726918597320754204963108479033795300218928893865804393555656629765349067579573995205455872633125475949473651584853160943170511881752808024135820011268660447704694282669511190099517954634881515346720620997629677353565529642603964399698884725163568153809129771295447576618023608875468608350081107266995065073021088991222934160432732574697913940145151702459484331859138233607910179179348024073488599864211651575524675652615746332503105946513633102709707839480105124056705048028435756575851725925343232351439988626923493660089903409443222967372766427505877

c_8 = 26826781250485240107205806565470198235424381799903081119223042470070939251617723669766649858906116405763606062082062462392659592589941551094212081339642661994416094543729373586729010488168695799409618391659090474313369708950410407550570077822600832863932265109645640864360802153674045359215254069880385145355179371771085941397068774961394195454299863506546633167347854883162483746334442978213997100278599491182275455799400724580690489706956083173971013381791909598405808937827249864491132563638053872994001690110318124700026875841640770306339087452386837807669174183248142784513820550711031083753337874961288621383038

a = pow(c_2, 2) - c_4
b = pow(c_2, 3) - c_8
N = GCD(a, b)
P = isqrt(N)

print(P)

p.sendline(str(P+1).encode())
c = p.recvline()
e = int((int(c[:-1]) - 1)//P)

print(e)
print(isPrime(e))

d = inverse(e, P*(P-1))

print(long_to_bytes(pow(cipher, d, N)))

p.interactive()
p.close()